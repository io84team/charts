apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
      {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if or .Values.podAnnotations .Values.metrics.enabled }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.metrics.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: php-fpm
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.phpImage.registry }}/{{ .Values.phpImage.repository }}:{{ .Values.phpImage.tag }}"
          imagePullPolicy: {{ .Values.phpImage.pullPolicy }}
          volumeMounts:
            - mountPath: /var/www
              name: www
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
            {{- if and .Values.oauthPrivateKey .Values.oauthPublicKey }}
            - name: oauth-keys
              mountPath: /var/www/app/storage/oauth-private.key
              subPath: oauth-private.key
            - name: oauth-keys
              mountPath: /var/www/app/storage/oauth-public.key
              subPath: oauth-public.key
            {{- end }}
          envFrom: &envFrom
            - configMapRef:
                name: {{ include "common.names.fullname" . }}-env
            - secretRef:
                name: {{ include "common.names.fullname" . }}-env
        - name: nginx
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.nginxImage.registry }}/{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
          imagePullPolicy: {{ .Values.nginxImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health/alive
              port: http
          readinessProbe:
            httpGet:
              path: /api/health/alive
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.customNginxConf }}
            - name: {{ template "common.names.fullname" . }}-site-config
              mountPath: /etc/nginx/conf.d/
            {{- end }}
            - mountPath: /var/www
              name: www
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
            {{- if and .Values.oauthPrivateKey .Values.oauthPublicKey }}
            - name: oauth-keys
              mountPath: /var/www/app/storage/oauth-private.key
              subPath: oauth-private.key
            - name: oauth-keys
              mountPath: /var/www/app/storage/oauth-public.key
              subPath: oauth-public.key
            {{- end }}
          envFrom: *envFrom
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if and .Values.oauthPrivateKey .Values.oauthPublicKey }}
        - name: oauth-keys
          secret:
            secretName: {{ template "common.names.fullname" . }}-oauth
        {{- end }}
        {{- if .Values.customNginxConf }}
        - name: {{ template "common.names.fullname" . }}-site-config
          configMap:
            name: {{ template "common.names.fullname" . }}-site-config
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: www
          persistentVolumeClaim:
            claimName: {{ tpl .Values.persistence.existingClaim . }}
  {{- else if not .Values.persistence.enabled }}
        - name: www
          emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: www
        labels: {{ include "common.labels.matchLabels" . | nindent 10 }}
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) }}
        {{- if .Values.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- end }}